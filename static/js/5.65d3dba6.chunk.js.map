{"version":3,"sources":["components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Container/Container.styles.jsx","../node_modules/shortid/lib/alphabet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Container/Container.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","redux/contacts/contactsSelectors.js","components/PhoneBookForm/PhoneBookForm.styles.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/PhoneBookListItem/PhoneBookListItem.styles.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.styles.jsx","components/PhoneBookList/PhoneBookList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"names":["Wrapper","styled","section","Title","h2","Section","title","children","Main","div","ContainerContacts","ContainerAdd","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","_slicedToArray","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","unsupportedIterableToArray","TypeError","Container","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","id","RegExp","replace","test","getFilter","state","contacts","getIsLoading","isLoading","getContacts","items","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","form","Label","label","Input","input","Button","button","ContainerForm","PhoneBookForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","contactsSelectors","nameInputId","shortid","telInputId","handleSetUserInfo","e","currentTarget","onSubmit","preventDefault","includedName","find","includedNumber","Swal","fire","position","icon","toUpperCase","confirmButtonColor","checkContact","contactsOperations","addContact","action","onChange","type","pattern","placeholder","autoComplete","maxLength","required","htmlFor","Item","li","propTypes","onClick","PropTypes","func","isRequired","PhoneBookListItem","List","ul","PhoneBookList","map","deleteContact","FilterContainer","Filter","filterInputId","changeFilter","target","ContactsPage","useEffect","fetchContacts"],"mappings":"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","file":"static/js/5.65d3dba6.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.section`\n  padding: 60px 0;\n`;\nexport const Title = styled.h2`\n  margin: 0 auto 50px;\n  text-transform: capitalize;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n  text-align: center;\n  color: #727273;\n`;","import PropTypes from \"prop-types\";\nimport { Wrapper, Title } from \"./Section.styles\";\nimport { RiBook2Line } from \"react-icons/ri\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && (\n        <Title>\n          <RiBook2Line />\n          {title}\n        </Title>\n      )}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;","import styled from \"@emotion/styled\";\n\nexport const Main = styled.div`\n  width: 900px;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 30px;\n  border-radius: 20px;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec080;\n  background-color: #f0f0f3;\n  & h1,\n  h2 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #727273;\n    font-size: 28px;\n    margin-bottom: 50px;\n    margin-top: 0;\n    & svg {\n      margin-right: 15px;\n      color: #727273;\n    }\n  }\n`;\n\nexport const ContainerContacts = styled.div`\n  width: 450px;\n`;\nexport const ContainerAdd = styled.div`\n  width: 450px;\n`;","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import PropTypes from \"prop-types\";\nimport { Main } from \"./Container.styles\";\n\nconst Container = ({ children }) => {\n  return <Main>{children}</Main>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import { createSelector } from '@reduxjs/toolkit';\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n    return contacts.filter(\n        contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n            contact.number.includes(filter),\n    );\n});","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  margin: 0 auto 50px;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  left: 0;\n  bottom: 5px;\n  margin-bottom: 10px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n  transition: color 250ms ease, transform 250ms ease;\n  & svg {\n    margin-right: 10px;\n    font-weight: 500;\n    transition: color 250ms ease, transform 250ms ease;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  padding-left: 30px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    font-weight: 700;\n    transition: opacity 250ms ease;\n  }\n  &:focus {\n    outline: none;\n    border-color: var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      font-weight: 700;\n      transition-delay: 250ms;\n    }\n  }\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    color: var(--dark);\n    & svg {\n      font-weight: 700;\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 1px solid #f0f0f3;\n  box-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n  border-radius: 20px;\n  font-size: 20px;\n  text-transform: uppercase;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &:hover {\n    transform: scale(1.2);\n  }\n  & svg {\n    margin-right: 10px;\n  }\n`;\nexport const ContainerForm = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 50px;\n`;","import Swal from 'sweetalert2';\nimport { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiUserLine, RiPhoneLine, RiUserAddLine } from 'react-icons/ri';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { Form, Label, Input, Button, ContainerForm } from './PhoneBookForm.styles';\n\nconst PhoneBookForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(contactsSelectors.getContacts);\n\n    const nameInputId = shortid();\n    const telInputId = shortid();\n\n    const checkContact = (contacts, name, number) => {\n        const includedName = contacts.find(\n            contact => contact.name.toLowerCase() === name.toLowerCase(),\n        );\n\n        const includedNumber = contacts.find(\n            contact => contact.number.replace(/[^0-9]/g, '') === number.replace(/[^0-9]/g, ''),\n        );\n\n        if (includedName) {\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: `${name.toUpperCase()}\\nis already in contacts!`,\n                confirmButtonColor: 'indianred',\n            });\n\n            return includedName;\n        }\n\n        if (includedNumber) {\n            Swal.fire({\n                position: 'center',\n                icon: 'error',\n                title: `This number is already in contacts as\\n${includedNumber.name.toUpperCase()}`,\n                confirmButtonColor: 'indianred',\n            });\n            return includedNumber;\n        }\n    };\n\n    const handleSetUserInfo = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const existedContact = checkContact(contacts, name, number);\n\n        if (existedContact) return;\n\n        dispatch(contactsOperations.addContact({ name, number }));\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit} action=\"\">\n            <ContainerForm>\n                <Input\n                    onChange={handleSetUserInfo}\n                    id={nameInputId}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    placeholder=\"Name\"\n                    autoComplete=\"off\"\n                    maxLength=\"40\"\n                    required\n                />\n                <Label htmlFor={nameInputId}>\n                    <RiUserLine size=\"25\" />\n                    Name\n                </Label>\n            </ContainerForm>\n            <ContainerForm>\n                <Input\n                    onChange={handleSetUserInfo}\n                    id={telInputId}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    placeholder=\"111-11-11\"\n                    autoComplete=\"off\"\n                    maxLength=\"15\"\n                    required\n                />\n                <Label htmlFor={telInputId}>\n                    <RiPhoneLine size=\"25\" />\n                    Number\n                </Label>\n            </ContainerForm>\n            <Button type=\"submit\">\n                <RiUserAddLine />\n                Add contact\n            </Button>\n        </Form>\n    );\n};\nexport default PhoneBookForm;","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 440px;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px 5px;\n  & span {\n    display: inline-flex;\n    align-items: center;\n    font-weight: 600;\n    color: var(--grey);\n    &:first-of-type {\n      color: var(--dark);\n      margin-right: 10px;\n    }\n    & svg {\n      margin-right: 15px;\n      color: var(--color-accent);\n    }\n  }\n  & svg {\n    color: var(--color-accent);\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: 10px;\n  font-size: 16px;\n  padding: 5px;\n  color: var(--dark);\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 250ms ease;\n  &:hover {\n    border: 1px solid var(--color-accent);\n    color: var(--color-accent);\n  }\n`;","import PropTypes from 'prop-types';\nimport { Item, Button } from './PhoneBookListItem.styles';\nimport { RiUserHeartFill } from 'react-icons/ri';\n\nconst PhoneBookListItem = ({ name, number, onClick }) => {\n    return (\n        <Item>\n            <span>\n                <RiUserHeartFill size=\"20\" />\n                {name}:\n            </span>\n            <span>{number}</span>\n            <Button onClick={onClick}>delete</Button>\n        </Item>\n    );\n};\n\nPhoneBookListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookListItem;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  border-radius: 4px;\n  overflow: hidden;\n`;","import PhoneBookListItem from '../PhoneBookListItem/PhoneBookListItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { List } from './PhoneBookList.styles';\n\nconst PhoneBookList = () => {\n    const contacts = useSelector(contactsSelectors.getVisibleContacts);\n    const dispatch = useDispatch();\n    return (\n        <List>\n            {contacts.map(({ name, number, id }) => {\n                return (\n                    <PhoneBookListItem\n                        key={id}\n                        name={name}\n                        number={number}\n                        id={id}\n                        onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                    />\n                );\n            })}\n        </List>\n    );\n};\n\nexport default PhoneBookList;","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  cursor: text;\n  font-size: 20px;\n  color: var(--grey);\n  transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  & svg {\n    margin-right: 10px;\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 30px;\n  padding-left: 40px;\n  border: none;\n  border-bottom: 1px solid var(--dark);\n  font-size: 20px;\n  color: var(--dark);\n  background-color: transparent;\n  transition: all 250ms ease-in-out;\n  &::placeholder {\n    opacity: 0;\n    color: var(--dark);\n    transition: opacity 250ms ease;\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 1px solid var(--dark);\n    &::placeholder {\n      opacity: 0.7;\n      transition-delay: 250ms;\n    }\n  }\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    font-size: 0;\n    text-transform: uppercase;\n    font-weight: 600;\n    color: var(--dark);\n    & svg {\n      color: var(--dark);\n    }\n  }\n`;\n\nexport const FilterContainer = styled.div`\n  position: relative;\n  width: 400px;\n  margin-bottom: 25px;\n`;","import shortid from 'shortid';\nimport { RiFilter2Line } from 'react-icons/ri';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { FilterContainer, Label, Input } from './Filter.styles';\n\nconst Filter = () => {\n    const filterInputId = shortid();\n    const value = useSelector(contactsSelectors.getFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <FilterContainer>\n                <Input\n                    id={filterInputId}\n                    name=\"filter\"\n                    onChange={e => dispatch(changeFilter(e.target.value))}\n                    type=\"text\"\n                    value={value}\n                    placeholder=\"Name\"\n                />\n                <Label htmlFor={filterInputId}>\n                    <RiFilter2Line size=\"30\" />\n                    Find contact by name\n                </Label>\n            </FilterContainer>\n        </>\n    );\n};\n\nexport default Filter;","import PhoneBookForm from \"../../components/PhoneBookForm/PhoneBookForm\";\nimport PhoneBookList from \"../../components/PhoneBookList/PhoneBookList\";\nimport Container from \"../../components/Container/Container\";\nimport Filter from \"../../components/Filter/Filter\";\nimport Section from \"../../components/Section/Section\";\nimport React, { useEffect } from \"react\";\nimport { RiContactsFill, RiUserAddFill } from 'react-icons/ri';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\nimport { ContainerContacts, ContainerAdd } from '../../components/Container/Container.styles';\n// import { TitleH2 } from \"./ContactsPage.styled\";\n// import { TitleH1 } from \"./ContactsPage.styled\";\n\nconst ContactsPage = () => {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phone Book\">\n        <Container>\n            <ContainerAdd>\n                    <h1>\n                        <RiUserAddFill /> Add Contact\n                    </h1>\n                    <PhoneBookForm />\n                </ContainerAdd>\n\n                <ContainerContacts>\n                    <h2>\n                        <RiContactsFill />\n                        Contacts\n                    </h2>\n                    <Filter />\n                    {contacts.length > 0 && <PhoneBookList />}\n                </ContainerContacts>\n            </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;"],"sourceRoot":""}