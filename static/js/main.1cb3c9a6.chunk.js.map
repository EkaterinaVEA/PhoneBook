{"version":3,"sources":["components/AuthNav/AuthNav.styles.jsx","components/AuthNav/AuthNav.jsx","components/SiteNav/SiteNav.styles.jsx","components/SiteNav/SiteNav.jsx","components/UserMenu/UserMenu.styles.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.styles.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","App.jsx","redux/auth/authSlice.js","redux/store.js","index.js","redux/contacts/contactsOperations.js","services/contactsApi.js","utils/notifications.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/contacts/contactsSlice.js"],"names":["Nav","AuthLink","NavLink","AuthNav","to","SiteNavLink","SiteNav","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","location","useLocation","handleNavLinkClick","e","target","getAttribute","pathname","preventDefault","onClick","Container","Username","LogOutBtn","IconButton","UserMenu","username","getUsername","dispatch","useDispatch","type","authOperations","logOut","StyledAppBar","AppBar","StyledToolbar","Toolbar","StylesProvider","injectFirst","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","LoaderWrapper","Loader","loading","color","size","HomePage","lazy","ContactsPage","RegisterPage","LoginPage","App","useEffect","getCurrentUser","fallback","exact","path","initialState","user","name","email","token","isRefreshing","authSlice","createSlice","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","addMatcher","isAnyOf","register","logIn","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","theme","createTheme","palette","primary","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","fetchContacts","createAsyncThunk","_","a","rejectWithValue","ContactsAPI","message","addContact","contact","data","deleteContact","id","axios","defaults","baseURL","headers","common","Authorization","get","post","delete","credentials","this","setToken","unsetToken","Toast","Swal","mixin","toast","position","iconColor","customClass","popup","showConfirmButton","timerProgressBar","width","Notify","title","text","timer","fire","icon","success","error","info","getState","getUserEmail","contactsSlice","items","filter","isLoading","reducers","changeFilter","push","console","actions"],"mappings":"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","file":"static/js/main.1cb3c9a6.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Nav = styled.nav`\n  margin-left: auto;\n`;\n\nexport const AuthLink = styled(NavLink)`\n  padding: 5px;\n\n  color: var(--dark);\n  transition: all 250ms ease;\n\n  &:first-of-type {\n    margin-right: 10px;\n  }\n\n  &.active {\n    position: relative;\n    color: var(--color-light);\n    pointer-events: none;\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      bottom: -5px;\n      left: 0;\n      width: 100%;\n      height: 2px;\n      border-radius: 2px;\n      background-color: var(--color-light);\n    }\n  }\n`;\n","import { Nav } from \"./AuthNav.styles\";\nimport { AuthLink } from \"./AuthNav.styles\";\n\nconst AuthNav = () => {\n  return (\n    <Nav>\n      <AuthLink to={\"/register\"}>Sign up</AuthLink>\n      <AuthLink to={\"/login\"}>Log in</AuthLink>\n    </Nav>\n  );\n};\n\nexport default AuthNav;","import styled from \"@emotion/styled/macro\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const SiteNavLink = styled(NavLink)`\n  color: var(--dark);\n  font-size: 24px;\n  font-weight: 700;\n`;","import { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { authSelectors } from \"../../redux/auth\";\nimport { SiteNavLink } from \"./SiteNav.styles\";\n\nconst SiteNav = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const location = useLocation();\n\n  const handleNavLinkClick = (e) => {\n    const isCurrentPath = e.target.getAttribute(\"href\") === location.pathname;\n\n    if (isCurrentPath) e.preventDefault();\n  };\n\n  return (\n    <nav>\n      {isLoggedIn ? (\n        <SiteNavLink to={\"/contacts\"} onClick={handleNavLinkClick}>\n          Contacts\n        </SiteNavLink>\n      ) : (\n        <SiteNavLink to={\"/\"} onClick={handleNavLinkClick}>\n          Home\n        </SiteNavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default SiteNav;","import styled from \"@emotion/styled/macro\";\nimport { IconButton } from \"@material-ui/core\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n`;\n\nexport const Username = styled.p`\n  color: var(--color-accent);\n  font-size: 20px;\n  margin-right: 10px;\n`;\n\nexport const LogOutBtn = styled(IconButton)`\n  color: var(--color-accent);\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { authOperations, authSelectors } from \"../../redux/auth\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Container } from \"./UserMenu.styles\";\nimport { Username } from \"./UserMenu.styles\";\nimport { LogOutBtn } from \"./UserMenu.styles\";\n\nconst UserMenu = () => {\n  const username = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Username>{username}</Username>\n      <LogOutBtn\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        <ExitToAppIcon />\n      </LogOutBtn>\n    </Container>\n  );\n};\n\nexport default UserMenu;","import styled from \"@emotion/styled/macro\";\nimport { AppBar, Toolbar } from \"@material-ui/core\";\n\nexport const StyledAppBar = styled(AppBar)`\n  position: static;\n  box-shadow: 10px 10px 30px 0 #aeaec080;\n  background-color: #f0f0f3;\n`;\nexport const StyledToolbar = styled(Toolbar)``;","import { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\n\nimport AuthNav from \"../AuthNav/AuthNav\";\nimport SiteNav from \"../SiteNav/SiteNav\";\nimport UserMenu from \"../UserMenu/UserMenu\";\n\nimport { StyledAppBar } from \"./AppBar.styles\";\nimport { StyledToolbar } from \"./AppBar.styles\";\n\nconst AppBar = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <StylesProvider injectFirst>\n      <StyledAppBar>\n        <StyledToolbar>\n          <SiteNav />\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </StyledToolbar>\n      </StyledAppBar>\n    </StylesProvider>\n  );\n};\n\nexport default AppBar;","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PrivateRoute = ({ children, redirectTo = \"/login\", ...routeProps }) => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PublicRoute = ({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n};\n\nexport default PublicRoute;","import styled from '@emotion/styled/macro';\n\nexport const LoaderWrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    pointer-events: none;\n`;","import PuffLoader from 'react-spinners/PuffLoader';\nimport { LoaderWrapper } from './Loader.styles';\n\nexport const Loader = ({ loading }) => {\n    return (\n        <LoaderWrapper>\n            <PuffLoader loading={loading} color={'#727273'} size={400} />\n        </LoaderWrapper>\n    );\n};","import { lazy, Suspense, useEffect } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport { useDispatch} from \"react-redux\";\nimport { authOperations,} from \"./redux/auth\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport { Loader } from \"./components/Loader/Loader\";\n\nconst HomePage = lazy(() =>\n  import(\"./pages/HomePage/HomePage\")\n);\n\nconst ContactsPage = lazy(() =>\n  import(\n    \"./pages/ContactsPage/ContactsPage\"\n  )\n);\n\nconst RegisterPage = lazy(() =>\n  import(\n    \"./pages/RegisterPage/RegisterPage\"\n  )\n);\n\nconst LoginPage = lazy(() =>\n  import(\"./pages/LoginPage/LoginPage\")\n);\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n          <Suspense fallback={<Loader />}>\n            <Switch>\n              <PublicRoute exact path={\"/\"}                \n              restricted\n              redirectTo=\"/contacts\"\n              >\n                <HomePage />\n              </PublicRoute>\n\n              <PublicRoute path={\"/register\"}\n              restricted\n              redirectTo=\"/contacts\"\n              >\n                <RegisterPage />\n              </PublicRoute>\n\n              <PublicRoute path={\"/login\"}\n              restricted\n              redirectTo=\"/contacts\"\n              >\n                <LoginPage />\n              </PublicRoute>\n\n              <PrivateRoute path={\"/contacts\"} redirectTo=\"/login\">\n                <ContactsPage />\n              </PrivateRoute>          \n            </Switch>\n          </Suspense>\n    </>\n  );\n};\n\nexport default App;","import { createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { authOperations } from \".\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: null,\n  isRefreshing: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(authOperations.getCurrentUser.pending, (state) => {\n        state.isRefreshing = true;\n      })\n      .addCase(authOperations.getCurrentUser.fulfilled, (state, action) => {\n        state.user = action.payload;\n      })\n      .addMatcher(\n        isAnyOf(\n          authOperations.register.fulfilled,\n          authOperations.logIn.fulfilled\n        ),\n        (state, action) => {\n          state.user = action.payload.user;\n          state.token = action.payload.token;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          authOperations.logOut.fulfilled,\n          authOperations.getCurrentUser.rejected\n        ),\n        (state) => {\n          state.user = initialState.user;\n          state.token = initialState.token;\n          state.isLoggedIn = initialState.isLoggedIn;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          authOperations.getCurrentUser.fulfilled,\n          authOperations.register.fulfilled,\n          authOperations.logIn.fulfilled\n        ),\n        (state) => {\n          state.isLoggedIn = true;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          authOperations.getCurrentUser.fulfilled,\n          authOperations.getCurrentUser.rejected\n        ),\n        (state) => {\n          state.isRefreshing = false;\n        }\n      );\n  },\n});\n\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"../redux/contacts/contactsSlice\";\nimport authReducer from \"./auth/authSlice\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#bc8f8f\",\n    },\n    secondary: {\n      main: \"#3c3c3c\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading=\"LOADING...\" persistor={persistor}>\n        <BrowserRouter>\n          <ThemeProvider theme={theme}>\n            <App />\n          </ThemeProvider>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ContactsAPI } from '../../services/contactsApi';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/getContacts',\n    async (_, { rejectWithValue }) => {\n        try {\n            const contacts = await ContactsAPI.fetchContacts();\n\n            return contacts;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'contacts/addContact',\n    async (contact, { rejectWithValue }) => {\n        try {\n            const data = await ContactsAPI.addContact(contact);\n\n            return data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (id, { rejectWithValue }) => {\n        try {\n            await ContactsAPI.deleteContact(id);\n\n            return id;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport class ContactsAPI {\n  static setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  }\n\n  static unsetToken() {\n    axios.defaults.headers.common.Authorization = \"\";\n  }\n\n  static async fetchContacts() {\n    const { data } = await axios.get(\"/contacts\");\n\n    return data;\n  }\n\n  static async addContact(contact) {\n    const { data } = await axios.post(\"/contacts\", contact);\n\n    return data;\n  }\n\n  static async deleteContact(id) {\n    await axios.delete(`/contacts/${id}`);\n  }\n\n  static async register(credentials) {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n\n    this.setToken(data.token);\n\n    return data;\n  }\n\n  static async logIn(credentials) {\n    const { data } = await axios.post(\"/users/login\", credentials);\n\n    this.setToken(data.token);\n\n    return data;\n  }\n\n  static async logOut() {\n    await axios.post(\"/users/logout\");\n\n    this.unsetToken();\n  }\n\n  static async getCurrentUser(token) {\n    this.setToken(token);\n\n    const { data } = await axios.get(\"/users/current\");\n\n    return data;\n  }\n}","import Swal from \"sweetalert2\";\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top-right\",\n  iconColor: \"white\",\n  customClass: {\n    popup: \"colored-toast\",\n  },\n  showConfirmButton: false,\n  timerProgressBar: true,\n  width: 420,\n});\n\nexport class Notify {\n  static async error(title, text, timer = 2000) {\n    await Toast.fire({\n      icon: \"error\",\n      timer,\n      title,\n      text,\n    });\n  }\n\n  static async success(title, text, timer = 2000) {\n    await Toast.fire({\n      icon: \"success\",\n      timer,\n      title,\n      text,\n    });\n  }\n\n  static async warning(title, text, timer = 2000) {\n    await Toast.fire({\n      icon: \"warning\",\n      timer,\n      title,\n      text,\n    });\n  }\n\n  static async info(title, message, timer = 2000) {\n    await Toast.fire({\n      icon: \"info\",\n      timer,\n      title,\n      text: message,\n    });\n  }\n\n  static async question(title, message, timer = 2000) {\n    await Toast.fire({\n      icon: \"question\",\n      timer,\n      title,\n      text: message,\n    });\n  }\n}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { ContactsAPI } from \"../../services/contactsApi\";\nimport { Notify } from \"../../utils/notifications\";\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await ContactsAPI.register(credentials);\n\n      Notify.success(\"You have successfully registered!\");\n\n      return data;\n    } catch (error) {\n      Notify.error(`Acount already exist!`);\n\n      return rejectWithValue();\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await ContactsAPI.logIn(credentials);\n\n      Notify.success(\n        \"Login successful!\\n\",\n        `Welcome back, ${data.user.name}!`,\n        5000\n      );\n\n      return data;\n    } catch (error) {\n      Notify.error(\"Incorrect email or password\");\n      return rejectWithValue();\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk(\n  \"auth/logout\",\n  async (_, { rejectWithValue }) => {\n    try {\n      await ContactsAPI.logOut();\n\n      Notify.info(\"You have been logged out!\");\n    } catch (error) {\n      return rejectWithValue();\n    }\n  }\n);\n\nexport const getCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, { getState, rejectWithValue }) => {\n    const token = getState().auth.token;\n\n    if (!token) return rejectWithValue();\n\n    try {\n      const user = await ContactsAPI.getCurrentUser(token);\n\n      return user;\n    } catch (error) {}\n  }\n);","export const getUsername = (state) => state.auth.user.name;\n\nexport const getUserEmail = (state) => state.auth.user.email;\n\nexport const getIsLoggedIn = (state) => state.auth.isLoggedIn;","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { fetchContacts, addContact, deleteContact } from './contactsOperations';\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState: {\n        items: [],\n        filter: '',\n        isLoading: false,\n        error: null,\n    },\n    reducers: {\n        changeFilter: (state, action) => {\n            state.filter = action.payload;\n        },\n    },\n\n    extraReducers: builder => {\n        builder\n            .addCase(fetchContacts.fulfilled, (state, action) => {\n                state.items = action.payload;\n            })\n            .addCase(addContact.fulfilled, (state, action) => {\n                state.items.push(action.payload);\n            })\n            .addCase(deleteContact.fulfilled, (state, action) => {\n                state.items = state.items.filter(({ id }) => id !== action.payload);\n            })\n            .addMatcher(\n                isAnyOf(\n                    fetchContacts.pending,\n                    addContact.pending,\n                    deleteContact.pending\n                ),\n                state => {\n                    state.isLoading = true;\n                    state.error = null;\n                },\n            )\n            .addMatcher(\n                isAnyOf(\n                    fetchContacts.fulfilled,\n                    addContact.fulfilled,\n                    deleteContact.fulfilled,\n                    fetchContacts.rejected,\n                    addContact.rejected,\n                    deleteContact.rejected,\n                ),\n                state => {\n                    state.isLoading = false;\n                },\n            )\n            .addMatcher(\n                isAnyOf(\n                    fetchContacts.rejected,\n                    addContact.rejected,\n                    deleteContact.rejected\n                ),\n                (state, action) => {\n                    state.error = action.payload;\n\n                    console.error(action.payload);\n                },\n            );\n    },\n});\n\nexport const { changeFilter } = contactsSlice.actions;\nexport default contactsSlice.reducer;"],"sourceRoot":""}